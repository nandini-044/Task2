{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "2f732356-d7fb-4e6e-9b52-9b51f0f659e2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter path of Image:  C:\\Users\\moinu\\OneDrive\\Pictures\\Screenshots\\Screenshot (174).png\n",
      "Enter Key for encryption of Image:  123\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Encryption Done...\n"
     ]
    }
   ],
   "source": [
    "def encrypt_image(path, key):\n",
    "    try:\n",
    "        fin = open(path, 'rb')\n",
    "        image = fin.read()\n",
    "        fin.close()\n",
    "        image = bytearray(image)\n",
    "        for index, values in enumerate(image):\n",
    "            image[index] = values ^ key\n",
    "        fin = open(path, 'wb')\n",
    "        fin.write(image)\n",
    "        fin.close()\n",
    "        print('Encryption Done...')\n",
    "    except Exception:\n",
    "        print('Error caught : ', Exception.__name__)\n",
    "\n",
    "def decrypt_image(path, key):\n",
    "    try:\n",
    "        fin = open(path, 'rb')\n",
    "        image = fin.read()\n",
    "        fin.close()\n",
    "        image = bytearray(image)\n",
    "        for index, values in enumerate(image):\n",
    "            image[index] = values ^ key\n",
    "        fin = open(path, 'wb')\n",
    "        fin.write(image)\n",
    "        fin.close()\n",
    "        print('Decryption Done...')\n",
    "    except Exception:\n",
    "        print('Error caught : ', Exception.__name__)\n",
    "\n",
    "# Example usage:\n",
    "path = input('Enter path of Image: ')\n",
    "key = int(input('Enter Key for encryption of Image: '))\n",
    "encrypt_image(path, key)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fb440245-d2c0-40a3-a571-a45f45e9d7c1",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
